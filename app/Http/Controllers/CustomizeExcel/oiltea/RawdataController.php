<?php

namespace App\Http\Controllers\CustomizeExcel\oiltea;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\User;
use App\Role;
use App\Group;
use App\Form;
use App\AnswerForm;
use DB;
use Hash;
use Carbon\Carbon;
use Session;
use Redirect;
use PHPExcel_Worksheet_Drawing;
use Maatwebsite\Excel\Facades\Excel;
use Log;
use Zipper;
use App\FLatdata;
use Box\Spout\Common\Type;
use Box\Spout\Writer\Style\Border;
use Box\Spout\Writer\Style\BorderBuilder;
use Box\Spout\Writer\Style\Color;
use Box\Spout\Writer\Style\StyleBuilder;
use Box\Spout\Writer\WriterFactory;

    ini_set('max_execution_time', 1200);
    ini_set('memory_limit', -1);

class RawdataController extends Controller
{
    public function index(){
        $idforms = [
            '20170704181315-520859595846131-1698285',
            '20170717111115-521957475655869-1517240',
            '20170706143459-521019299462769-1621511',
            '20170818112414-52472305402946-1904582',
            '20170818163225-524741545723944-1924289',
            '20170819091608-524801768162695-1980373',
            '20170923133340-527866420224209-1749826'
        ];

        $AuthForms = \Auth::user()->form_ids;
        $formIds = [];
        $admin = \Auth::user()->firstname == 'admin';

        if($admin && empty($AuthForms)){
            $AuthForms = [];
        }

        if(\Auth::user()->firstname == 'admin'){
            $forms = DB::collection('form')->where('data.deletedAt','')->whereIn('data.objectId', $idforms)->orderBy('_id','ASC')->pluck('data');
        }elseif($AuthForms != null){
            foreach($idforms as $idform){
                foreach ($AuthForms as $AuthForm) {
                    if($idform == $AuthForm['form_id']){
                        $formIds[] = $AuthForm['form_id'];
                    }
                }
            }
            if ($form_ids = $AuthForm['form_id']){
                $forms = DB::collection('form')->where('data.deletedAt','')->whereIn('data.objectId', $formIds)->orderBy('_id','ASC')->pluck('data'); 
            }
    
        }else if($AuthForms == null){
            $forms = [];
        }
        return view('report.oiltea.index',compact('forms'));
    }
    
    public function SelectConfig(Request $request){
        if($request->input('idforms') != null && $request->input('startdate') != null && $request->input('enddate') != null && $request->input('zone') != null){
            $idforms = $request->input('idforms');
            $startdate1 = date('Y-m-d 00:00:00', strtotime($request->input('startdate')));
            $enddate1 = date('Y-m-d 23:59:59', strtotime($request->input('enddate')));
            $startdate = new \MongoDate(strtotime($startdate1));
            $enddate = new \MongoDate(strtotime($enddate1));
            $zone = $request->input('zone');
        }
        else{
            $idforms = $request->input('idforms');
            $zone = $request->input('zone');
            $startdate = '';
            $enddate = '';
        }
        if($idforms == '20170923133340-527866420224209-1749826') {

            $adminForm = \Auth::user()->form_ids;
            $admin = \Auth::user()->firstname == 'admin';
            $adminFormDetail = checkRoles($admin,$adminForm,$idforms);

            $FORM_ID = '20170924051930-527923170847862-1797275';
            //// set question ID
            $PLANT_NUMBER = '20170923133359-527866439397654-1906985';
            $TREE_NUMBER = '20170924051946-527923186856328-1818442';
            $OWNER_PREFIX = '20170927035437-528177277140892-1456683';
            $OWNER_FIRSTNAME = '20170927035050-528177050079481-1208383';
            $OWNER_LASTNAME = '20170927035405-528177245844387-1945347';
            $VILLAGE_NAME = '20170923133938-527866778466936-1673062';
            $GRADE_OF_TREE = '20170924052009-527923209216053-1393981'; 
            $BRANCH_TREE = '20170928064746-528274066156638-1855247';
            $HEIGHT_TREE = '20170924052356-527923436402867-1527983'; 
            $DIAMETER = '20170924052420-527923460685421-1506424'; 
            $NATURE_SHAPE = '20170924052527-527923527114575-1199551'; 
            $OTHER_SHAPE = '20170924052624-527923584636773-1020211';
            $REPAIR_YEAR = '20170930132742-528470862371504-1932568';
            //$image_tree = '20170923135819-527867899258356-1278866';
            $IMAGE_TREE = '20170924052756-527923676209237-1301131';
            $parent_tree = '20170924055643-527925403438996-1541374';
            $FORM_ID = '20170924051930-527923170847862-1797275';

            $startdate = new \MongoDate(
                            strtotime(date('Y-m-d 00:00:00', strtotime($request->input('startdate'))))
                        );
            $enddate = new \MongoDate(
                            strtotime(date('Y-m-d 23:59:59', strtotime($request->input('enddate'))))
                        );
            Log::info("Export Oiltea Rawdata Date Filter", ['user access' => \Auth::user()->_id]);
            //// query parentAnswerFormId
            if ($admin || $adminFormDetail == '0' || $adminFormDetail == '2') {
                $objectId = DB::collection('answerForm')
                                ->timeout(-1)
                                ->where('data.deletedAt', '')
                                ->where('data.formId', $FORM_ID)
                                ->whereBetween('data.isoUpdatedAt', array($startdate, $enddate))
                                ->distinct('data.parentAnswerFormId')
                                ->get();
            } else {
                Session::flash('message', "เฉพาะ admin เท่านั้น !");
                return Redirect::back();
            }
            //// query ข้อมูลต้นชาใน flatData
            if (!empty($objectId)) {
                $oilTeaTrees = DB::collection('flatData')
                                ->timeout(-1)
                                ->whereIn('parentAnswerFormId', $objectId)
                                ->whereBetween('isoUpdatedAt', array($startdate, $enddate))
                                ->project([
                                    "_id" => 0,
                                    "createdAt" => 0,
                                    "createdBy" => 0,
                                    "deletedAt" => 0,
                                    "answerPreview" => 0,
                                ])->get();
            } else {
                Session::flash('message', "ไม่มีข้อมูล");
                return Redirect::back();
            }

            if (empty($oilTeaTrees)) {
                Session::flash('message', "ไม่มีข้อมูล");
                return Redirect::back();  
            }
            
            $i = 0;
            $treeData = [];
            $rawdataresult = [];
            if (!empty($oilTeaTrees)) {
                foreach ($oilTeaTrees as $oilTeaTree) {
                    if (!empty($oilTeaTree['parentAnswerFormId'])) {            
                        // query หาต้นชาน้ำมันจาก flatdata
                        $oilTeaPlant = DB::collection('flatData')
                                        ->timeout(-1)
                                        ->where('objectId', $oilTeaTree['parentAnswerFormId'])
                                        ->orderBy($PLANT_NUMBER, 'ASC')
                                        ->project([
                                                "_id" => 0,
                                                "createdAt" => 0,
                                                "updatedAt" => 0,
                                                "createdBy" => 0,
                                                "deletedAt" => 0,
                                                "answerPreview" => 0,
                                                "objectId" => 0,
                                                "parentAnswerFormId" => 0,
                                                "isoCreatedAt" => 0,
                                                "isoUpdatedAt" => 0,
                                        ])->first();
                        if (!empty($oilTeaPlant['updatedBy'])) {
                            $users = User::where('_id', $oilTeaPlant['updatedBy'])->first();
                            $username = $users['firstname']." ".$users['lastname'];
                        } else {
                            $users = User::where('_id', $oilTeaTree['updatedBy'])->first();
                            $username = $users['firstname']." ".$users['lastname'];
                        }

                        if (empty($oilTeaPlant[$PLANT_NUMBER])) { 
                            $plantNumber = '';
                        }
                        else if (!empty($oilTeaPlant[$PLANT_NUMBER])) {
                            $plantNumber = dataToValue($oilTeaPlant[$PLANT_NUMBER]);
                        }
                        ///set default index ชื่อหมู่บ้าน
                        if (empty($oilTeaPlant[$VILLAGE_NAME])) { 
                            $oilTeaPlant[$VILLAGE_NAME] = '';
                        }
                        else if (!empty($oilTeaPlant[$PLANT_NUMBER])) {
                            $oilTeaPlant[$VILLAGE_NAME] = dataToValue($oilTeaPlant[$VILLAGE_NAME]);
                        }
                        //// set default index ชื่อ-สกุล เจ้าของแปลง                
                        if (empty($oilTeaPlant[$OWNER_PREFIX]) || empty($oilTeaPlant[$OWNER_FIRSTNAME]) || empty($oilTeaPlant[$OWNER_LASTNAME])) {
                            $fullName = '';
                        } else if (gettype($oilTeaPlant[$OWNER_PREFIX]) != 'array' || gettype($oilTeaPlant[$OWNER_FIRSTNAME]) != 'array' || gettype($oilTeaPlant[$OWNER_LASTNAME]) != 'array') {
                            $fullName = $oilTeaPlant[$OWNER_PREFIX].$oilTeaPlant[$OWNER_FIRSTNAME]." ".$oilTeaPlant[$OWNER_LASTNAME];
                        } else {
                            $fullName = implode(',', $oilTeaPlant[$OWNER_PREFIX]).implode(',', $oilTeaPlant[$OWNER_FIRSTNAME])." ".implode(',', $oilTeaPlant[$OWNER_LASTNAME]);
                        }

                        if (empty($oilTeaTree[$TREE_NUMBER])) { 
                            $oilTeaTree[$TREE_NUMBER] = '';
                        } if (empty($oilTeaTree[$GRADE_OF_TREE])) { 
                            $oilTeaTree[$GRADE_OF_TREE] = '';
                         } if (empty($oilTeaTree[$BRANCH_TREE])) { 
                            $oilTeaTree[$BRANCH_TREE] = '';
                        } if (empty($oilTeaTree[$HEIGHT_TREE])) { 
                            $oilTeaTree[$HEIGHT_TREE] = '';
                        } if (empty($oilTeaTree[$DIAMETER])) { 
                            $oilTeaTree[$DIAMETER] = '';
                        }  if (empty($oilTeaTree[$NATURE_SHAPE])) { 
                            $oilTeaTree[$NATURE_SHAPE] = '';
                        } if (empty($oilTeaTree[$OTHER_SHAPE])) { 
                            $oilTeaTree[$OTHER_SHAPE] = '';
                        } if (empty($oilTeaTree[$REPAIR_YEAR])) { 
                            $oilTeaTree[$REPAIR_YEAR] = '';
                        } if (empty($oilTeaTree[$IMAGE_TREE])) { 
                            $oilTeaTree[$IMAGE_TREE] = '';
                        } 
                        $datetime = DateThai((date('Y-m-j H:m:s', strtotime($oilTeaTree['updatedAt'] . " +7 hour"))));
                        $rawdataresult[$i]['วันที่บันทึก'] = $datetime;
                        $rawdataresult[$i]['เลขที่แปลง'] = $plantNumber;
                        $rawdataresult[$i]['เลขที่ต้นชาน้ำมัน'] = dataToValue($oilTeaTree[$TREE_NUMBER]);
                        $rawdataresult[$i]['ชื่อเจ้าของแปลง'] = $fullName;
                        $rawdataresult[$i]['ชื่อหมูบ้าน'] = $oilTeaPlant[$VILLAGE_NAME];
                        $rawdataresult[$i]['เกรดของต้นชาน้ำมัน'] = dataToValue($oilTeaTree[$GRADE_OF_TREE]);
                        $rawdataresult[$i]['ต้นชาน้ำมันผ่านการเสียบกิ่งมาหรือไม่'] = dataToValue($oilTeaTree[$BRANCH_TREE]);
                        $rawdataresult[$i]['ความสูงของต้น (เมตร)'] = dataToValue($oilTeaTree[$HEIGHT_TREE]);
                        $rawdataresult[$i]['เส้นผ่านศูนย์กลางลำต้น (เซนติเมตร)'] = dataToValue($oilTeaTree[$DIAMETER]);
                        $rawdataresult[$i]['ลักษณะทรงพุ่มของต้นชาน้ำมัน'] = dataToValue($oilTeaTree[$NATURE_SHAPE]);
                        $rawdataresult[$i]['โปรดระบุ ลักษณะทรงพุ่มอื่นๆ'] = dataToValue($oilTeaTree[$OTHER_SHAPE]);
                        $rawdataresult[$i]['ปี พ.ศ. ที่ปลูกซ่อม'] = dataToValue($oilTeaTree[$REPAIR_YEAR]);
                        $rawdataresult[$i]['รูปภาพประกอบการเก็บข้อมูล'] = dataToValue($oilTeaTree[$IMAGE_TREE]);
                        $rawdataresult[$i]['ผุ้บันทึก'] = $username;
                        /*$numTrees[$plantNumber]['plantNumber'] = $plantNumber;
                        $numTrees[$plantNumber]['treeNumber'][] = intval($rawdataresult[$i]['เลขที่ต้นชาน้ำมัน']);
                        $numTrees[$plantNumber]['fullName'] = $username;*/
                    }
                    $i++;
                }
            }
            $l = 0;
            /*$missresult = [];
            $dupresult = [];
            $wrongresult = [];
            if (!empty($numTrees)) {
                foreach ($numTrees as $numTree) {
                        $missData = [];
                        $dupData = [];
                        $wrongData = [];
                    for ($m=1;$m<count($numTree['treeNumber']);$m++) {
                        if (!in_array($m, $numTree['treeNumber'])) {
                            $missData[$l][$m]['เลขที่แปลง'] = $numTree['plantNumber'];
                            $missData[$l][$m]['เลขที่ต้นชาน้ำมัน'] = sprintf("%04d", $m);
                            $missData[$l][$m]['ผู้บันทึก'] = $numTree['fullName'];
                            $missresult[] = $missData[$l][$m];
                        }
                    }
                    $j=0;
                    foreach (array_count_values($numTree['treeNumber']) as $val => $c) {
                        if ($c > 1) { 
                            $dupData[$l][$j]['เลขที่แปลง'] = $numTree['plantNumber'];
                            $dupData[$l][$j]['เลขที่ต้นชาน้ำมัน'] = sprintf("%04d", $val);
                            $dupData[$l][$j]['ผู้บันทึก'] = $numTree['fullName']; 
                            $dupresult[] = $dupData[$l][$j]; 
                        }
                        $j++;
                    }

                    for ($y = 0; $y < count($numTree['treeNumber']); $y++) {
                        if (substr(sprintf("%04d", $numTree['treeNumber'][$y]),0,1) > 2) {
                            $wrongData[$l][$y]['เลขที่แปลง'] = $numTree['plantNumber'];
                            $wrongData[$l][$y]['เลขที่ต้นชาน้ำมัน'] = sprintf("%04d", $y);
                            $wrongData[$l][$y]['ผู้บันทึก'] = $numTree['fullName']; 
                            $wrongresult[] = $wrongData[$l][$y]; 
                        }
                    }       
                    $l++;
                }
            }*/
            $style = (new StyleBuilder())
               ->setFontBold()
               ->setFontSize(12)
               ->build();
            $writer = WriterFactory::create(Type::XLSX); // for XLSX files
            $writer->openToBrowser("ข้อมูลรวมงานเก็บข้อมูลต้นชาน้ำมัน.xlsx");

            $rawData = $writer->getCurrentSheet();
            $writer->addRowWithStyle(
                array(
                    'วันที่บันทึก',
                    'เลขที่แปลง',
                    'เลขที่ต้นชาน้ำมัน',
                    'ชื่อเจ้าของแปลง',
                    'ชื่อหมู่บ้าน',
                    'เกรดของต้นชาน้ำมัน',
                    'ต้นชาน้ำมันผ่านการเสียบกิ่งมาหรือไม่',
                    'ความสูงของต้น (เมตร)',
                    'เส้นผ่านศูนย์กลางลำต้น (เซนติเมตร)',
                    'ลักษณะทรงพุ่มของต้นชาน้ำมัน',
                    'ลักษณะทรงพุ่มอื่นๆ',
                    'ปี พ.ศ. ที่ปลูกซ่อม',
                    'รูปภาพประกอบการเก็บข้อมูล',
                    'ผู้บันทึก'
                ),
            $style);
            $sheet = $writer->getCurrentSheet();
            $sheet->setName('ข้อมูลดิบ');            
            $writer->addRows($rawdataresult);

            $writer->close();
        }
        if($idforms == '20170704181315-520859595846131-1698285'){
            $questionconfig = [
            [
                'name' => 'แจกปุ๋ยสูตร 15-15-15 ให้ชาวบ้าน',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170921093118-527653878730673-1191695',
                    '20170706105347-521006027665447-1131165',
                    '20170706105403-521006043566307-1827764',
                ]
            ],
            [
                'name' => 'ถางวัชพืชในแปลงปลูกชาน้ำมัน',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706105556-521006156460106-1425569',
                    '20170706105425-521006065019945-1796961',
                    '20170706105707-52100622714611-1710510',
                    '20170706105747-521006267205782-1931767',
                    '20170706105521-521006121290134-1496028',
                    '20170706105535-521006135018206-1289863'
                ]
            ],
            [
                'name' => 'ตรวจเช็คจำนวนต้นชาน้ำมัน',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706110349-521006629576219-1914578',
                    '20170706110445-521006685183767-1086537',
                    '20170706110455-521006695411641-1622015',
                    '20170706110514-521006714167333-1517163',
                ]
            ],
            [
                'name' => 'ตัดสางต้นไม้ในแปลงปลูก',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706110901-521006941130406-1680467',
                    '20170706111850-521007530734986-1689426',
                    '20170706110637-521006797503558-1378938',
                    '20170706112025-521007625137768-1311579',
                    '20170706112139-521007699376998-1893446',
                    '20170706111922-521007562978187-1368242',
                    '20170706112214-521007734607003-1615371',
                ]
            ],
            [
                'name' => 'ปลูกซ่อมต้นกล้าชาน้ำมัน',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706112418-521007858245137-1028457',
                    '20170706113806-521008686847822-1724765',
                    '20170706114214-521008934024861-1085974',
                    '20170706114239-521008959429913-1262564',
                    '20170706113909-521008749799609-1540547',
                    '20170706114014-521008814876644-1402692',
                    '20170706114156-521008916085013-1994836'
                ]
            ],
            [
                'name' => 'ปลูกซ่อมหญ้าแฝก',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706114526-521009126591053-1921305',
                    '20170706114829-521009309042086-1048924',
                    '20170706114646-521009206493607-1237787',
                    '20170706115119-521009479890386-1572374',
                    '20170706115154-521009514483259-1015937',
                    '20170706114601-521009161982636-1974697',
                    '20170706115230-521009550374804-1484508'
                ]
            ],
            [
                'name' => 'เก็บผลผลิต',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706115443-521009683738688-1254652',
                    '20170706115556-521009756907601-1502925',
                    '20170706115635-521009795325518-1054058',
                    '20170706115706-521009826389371-1350553'
                ]
            ],
            [
                'name' => 'ตัดแต่งหญ้าแฝกในแปลงชาน้ำมัน',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706134441-521016281344873-1319316',
                    '20170706134545-521016345215373-1279421',
                    '20170706134736-521016456419129-1169958',
                    '20170706134816-521016496711368-1063803',
                    '20170706134833-521016513047289-1771820'
                ]
            ],
            [
                'name' => 'ใส่ปุ๋ยเคมีสูตร 15-15-15 ในแปลงปลูกชาน้ำมัน',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706135315-521016795506233-1515344',
                    '20170706135342-521016822866773-1613341',
                    '20170706135410-521016850828495-1256165',
                    '20170706135534-52101693441882-1371300',
                    '20170706135454-521016894153685-1871689'
                ]
            ],
            [
                'name' => 'ทาสียาฆ่าแมลงต้นชาน้ำมัน',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706135709-52101702986007-1341611',
                    '20170706140514-521017514435562-1502716',
                    '20170706140548-521017548019019-1977344',
                    '20170706140634-521017594409509-1010677',
                    '20170706140702-521017622177584-1359919'
                ]
            ],
            [
                'name' => 'ตัดสางกิ่งไม้',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706140809-521017689793383-1464106',
                    '20170706140906-521017746146461-1765446',
                    '20170706140923-521017763695147-1437686',
                    '20170706141003-521017803488977-1512037',
                    '20170706141022-521017822471425-1678788'
                ]
            ],
            [
                'name' => 'ทำแนวกันไฟของเขตพื้นที่โครงการ',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706141224-521017944778431-1710540',
                    '20170706141248-521017968211209-1445232',
                    '20170706141308-521017988176128-1626965',
                    '20170706141354-521018034423203-1225137',
                    '20170706141409-521018049868602-1532446'
                ]
            ],
            [
                'name' => 'คลุมโคนต้นชาน้ำมัน',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170706141508-521018108592146-1385098',
                    '20170706141544-521018144700947-1593238',
                    '20170706141614-521018174674088-1399424',
                    '20170706141655-521018215300611-1824663',
                    '20170706141728-521018248287645-1367998'
                ]
            ],
            [
                'name' => 'งานเสียบกิ่ง',
                'id' => [
                    '20170822145320-52508120027868-1621012',
                    '20170706142255-521018575848099-1495034',
                    '20170817095724-52463144448573-1267182',
                    '20170817095832-524631512205177-1827647',
                    '20170817095900-524631540229025-1221420',
                ]
            ],
        ];

            $choiceid = '20170704181414-520859654659332-1164852';

            $answerformid = checkanswerform($idforms,$startdate,$enddate,$zone,$questionconfig,$choiceid);
            if($answerformid == false){
                Session::flash('message', "ไม่มีคำตอบ");
                return Redirect::back();
            }
            else{
                $this->generate_excel($answerformid,$questionconfig,$zone,$choiceid,$idforms);
            }
        }
        elseif($idforms == '20170717111115-521957475655869-1517240'){
        $questionconfig = [
            [
                'name' => 'งานมวลชน',
                'id' => [
                    '20170829155731-525689851982574-1257350',
                    '20170717111303-521957583483871-1655355',
                    '20170814114147-524378507921294-1541705',
                    '20170717111324-521957604610047-1935950',
                    '20170717111334-521957614764209-1169330',
                    '20170717111404-521957644218852-1267064',
                    '20170717111353-521957633107436-1550729',
                ]
            ],
            [
                'name' => 'งานอบรม',
                'id' => [
                    '20170829155731-525689851982574-1257350',
                    '20170717111425-521957665324741-1147569',
                    '20170814114217-524378537599242-1341580',
                    '20170717111436-521957676547406-1142324',
                    '20170717111509-521957709133222-1640481',
                    '20170717111457-52195769772113-1328493',
                ]
            ],
            [
                'name' => 'งานเฉพาะกิจ',
                'id' => [
                    '20170829155731-525689851982574-1257350',
                    '20170814114238-524378558606411-1168938',
                    '20170717111540-521957740895273-1034743',
                    '20170717111606-521957766046259-1196004',
                    '20170717111728-521957848903183-1389969',
                    '20170717111635-521957795518146-1731582',
                    '20170717111656-521957816498062-1716608',
                    '20170717111703-521957823226839-1422093',
                    '20170717111707-52195782732775-1120321',
                    '20170717111715-521957835160414-1762259',
                ]
            ],
            [
                'name' => 'ด้านการศึกษา',
                'id' => [
                    '20170829155731-525689851982574-1257350',
                    '20170822112831-525068911693531-1879077',
                    '20170822113920-525069560684234-1828280',
                    '20170822113936-525069576435224-1568196',
                    '20170822114009-52506960912357-1965891',
                    '20170822114046-525069646481092-1309958',
                    '20170822114101-525069661897285-1070113',
                    '20170822114126-525069686842213-1939707',
                    '20170822114147-525069707217893-1856649',
                    '20170822114824-525070104024639-1387614',
                ]
            ],
            [
                'name' => 'ด้านสุขภาพ',
                'id' => [
                    '20170829155731-525689851982574-1257350',
                    '20170822115527-525070527941667-1155986',
                    '20170822120210-525070930599242-1771418',
                    '20170822120716-525071236982682-1777038',
                    '20170822120946-525071386140612-1097284',
                    '20170822121240-525071560631082-1345842',
                ]
            ],
            [
                'name' => 'งานเข้าร่วมกิจกรรม',
                'id' => [
                    '20170829155731-525689851982574-1257350',
                    '20170822130404-525074644758718-1847229',
                    '20170822130737-525074857407105-1132964',
                    '20170822130752-525074872730065-1374215',
                    '20170822131006-525075006218866-1947213',
                    '20170822131105-525075065631709-1474057',
                ]
            ],
        ];
            $choiceid = '20170717111141-5219575016234-1992950';

            $answerformid = checkanswerform($idforms,$startdate,$enddate,$zone,$questionconfig,$choiceid);
     
            if($answerformid == false){
                Session::flash('message', "ไม่มีคำตอบ");
                return Redirect::back();
            }
            else{
                $this->generate_excel($answerformid,$questionconfig,$zone,$choiceid,$idforms);
            }
        }
        elseif($idforms == '20170706143459-521019299462769-1621511'){
        $questionconfig = [
            [
                'name' => 'ไก่',
                'id' => [
                    '20170825100359-525323039735515-1633082',
                    '20170706151128-521021488927826-1213405',
                    '20170706145931-521020771656336-1565491',
                    '20170706150000-521020800739041-1523814',
                    '20170706150014-521020814005611-1335934',
                    '20170706150145-52102090557007-1252956',
                    '20170706150208-521020928321144-1626105',
                    '20170706150520-521021120275847-1008343',
                    '20170706150531-521021131334171-1777734',
                    '20170706150553-521021153613187-1422845',
                    '20170706150852-521021332996654-1394467',
                    '20170706150914-521021354911394-1552831'
                ]
            ],
            [
                'name' => 'เป็ด',
                'id' => [
                    '20170825100359-525323039735515-1633082',
                    '20170706151128-521021488927826-1213405',
                    '20170829084655-525664015293542-1540119',
                    '20170829084655-525664015354785-1855037',
                    '20170829084655-525664015413076-1592620',
                    '20170829084655-525664015463198-1779324',
                    '20170829084655-525664015515976-1756693',
                    '20170829084655-525664015570272-1994363',
                    '20170829084655-525664015633587-1470693',
                    '20170829084655-525664015690271-1254201',
                    '20170829084655-525664015738169-1744342',
                    '20170829084655-525664015858736-1864230'
                ]
            ],
            [
                'name' => 'สุกร',
                'id' => [
                    '20170825100359-525323039735515-1633082',
                    '20170706151128-521021488927826-1213405',
                    '20170707094358-521088238623838-1270630',
                    '20170706151638-521021798430631-1357785',
                    '20170706151649-521021809657866-1404520',
                    '20170706151706-521021826575663-1456336',
                    '20170706161843-521025523149225-1153709',
                    '20170706160206-521024526789381-1733366',
                    '20170817094518-524630718216544-1352495',
                    '20170706151741-521021861630848-1518041',
                    '20170706153943-521023183928945-1060813',
                    '20170706154056-521023256778686-1045986',
                    '20170706155713-521024233840945-1923486',
                    '20170706155724-521024244509883-1658764',
                    '20170706160232-521024552173266-1003968',
                    '20170706160344-521024624307816-1470350',
                    '20170706160442-521024682731596-1347060',
                    '20170706160452-521024692648745-1122593',
                    '20170829092956-525666596122808-1099985',
                    '20170706160536-521024736174375-1555013',
                    '20170706160548-521024748009457-1192101',
                    '20170706160604-521024764735085-1174722',
                    '20170706160637-521024797882195-1906897'
                ]
            ],
            [
                'name' => 'หมู่ป่า',
                'id' => [
                    '20170825100359-525323039735515-1633082',
                    '20170706151128-521021488927826-1213405',
                    '20170829084935-525664175580837-1375881',
                    '20170829084935-525664175629202-1191128',
                    '20170829084935-525664175676268-1288577',
                    '20170829084935-525664175729063-1831136',
                    '20170829084935-525664175773433-1166442',
                    '20170829084935-525664175819074-1548292',
                    '20170829084935-525664175862343-1463854',
                    '20170829084935-525664175898918-1626807',
                    '20170829084936-525664176159016-1555788',
                    '20170829084936-525664176212558-1563045',
                    '20170829084936-525664176316819-1516243',
                    '20170829084936-525664176369833-1405934',
                    '20170829084936-525664176472094-1931906',
                    '20170829084936-525664176530373-1292498',
                    '20170829084936-525664176642233-1701960',
                    '20170829084936-525664176697027-1495535',
                    '20170829092942-525666582027542-1656658',
                    '20170829084936-525664176813313-1845106',
                    '20170829084936-525664176865805-1450064',
                    '20170829084936-525664176930296-1425632',
                    '20170829084936-525664176981939-1739477',
                ]
            ],
            [
                'name' => 'พืชเศรษฐกิจ',
                'id' => [
                    '20170825100359-525323039735515-1633082',
                    '20170706151128-521021488927826-1213405',
                    '20170717120533-521960733438235-1317890',
                    '20170717113808-521959088311417-1478383',
                    '20170717113824-521959104347392-1868684',
                    '20170717113834-521959114518615-1504219',
                    '20170717113854-52195913453946-1666329'
                ]
            ],
            [
                'name' => 'ผักสวนครัว',
                'id' => [
                    '20170825100359-525323039735515-1633082',
                    '20170706151128-521021488927826-1213405',
                    '20170707174717-521117237403036-1787382',
                    '20170707175547-521117747529307-1013654',
                    '20170707175635-521117795706124-1317167',
                    '20170707175704-521117824565236-1390274',
                    '20170707175728-521117848966038-1628492',
                    '20170707175804-521117884679582-1645453',
                    '20170830162723-525778043252053-1747496',
                    '20170707175829-521117909960661-1184737',
                    '20170830162744-525778064993042-1829698',
                ]
            ],
            [
                'name' => 'ปลา',
                'id' => [
                    '20170825100359-525323039735515-1633082',
                    '20170706151128-521021488927826-1213405',
                    '20170707180804-52111848473579-1896697',
                    '20170830163102-525778262225953-1210136',
                    '20170707180825-521118505625637-1609389',
                    '20170830163123-525778283286172-1432574',
                    '20170707180857-521118537005069-1460290'
                ]
            ],
        ];
            $choiceid = '20170706143946-521019586529646-1993871';

            $answerformid = checkanswerform($idforms,$startdate,$enddate,$zone,$questionconfig,$choiceid);
            if($answerformid == false){
                Session::flash('message', "ไม่มีคำตอบ");
                return Redirect::back();
            }
            else{
                $this->generate_excel($answerformid,$questionconfig,$zone,$choiceid,$idforms);
            }
        }
        elseif($idforms == '20170818112414-52472305402946-1904582'){
        $questionconfig = [
            [
                'name' => 'ปลดระวาง',
                'id' => [
                    '20170822144624-525080784545514-1111252',
                    '20170818125527-524728527489556-1648789',
                    '20170820133920-524903960598555-1919003',
                    '20170820165744-524915864175209-1998576',
                    '20170820165904-524915944412482-1400358',
                    '20170820170107-524916067223848-1184677',
                    '20170820170317-52491619784943-1579514',
                    '20170820171359-524916839288035-1333329',
                    '20170820171559-524916959445271-1326102',
                    '20170818125715-524728635818033-1794977',
                    '20170818125846-52472872673338-1289855'
                ]
            ],
            [
                'name' => 'ป่วย',
                'id' => [
                    '20170822144624-525080784545514-1111252',
                    '20170818145034-524735434998189-1653740',
                    '20170820134321-524904201044185-1275771',
                    '20170820172941-524917781133385-1796047',
                    '20170821120703-524984823141552-1793100',
                    '20170820173324-524918004282747-1766202',
                    '20170820173541-524918141858724-1596387',
                    '20170820173620-524918180099442-1056627',
                    '20170820173736-524918256167693-1396445',
                    '20170818145035-524735435051451-1285141',
                    '20170818145035-524735435110127-1365867'
                ]
            ],
            [
                'name' => 'ติดตามการป่วย',
                'id' => [
                    '20170822144624-525080784545514-1111252',
                    '20170820174717-524918837539754-1564405',
                    '20170820174717-524918837627348-1486482',
                    '20170820174717-524918837715021-1368051',
                    '20170820174717-524918837795567-1600661',
                    '20170820174717-524918837854938-1697864',
                    '20170820174717-524918837906625-1507356',
                    '20170820174717-524918837958376-1334791',
                    '20170820174718-524918838006519-1365801',
                    '20170820174718-524918838056884-1633820',
                    '20170820174718-524918838109999-1705848'
                ]
            ],
            [
                'name' => 'ตาย',
                'id' => [
                    '20170822144624-525080784545514-1111252',
                    '20170820184004-524922004213373-1232867',
                    '20170820184334-52492221418228-1301979',
                    '20170820135050-52490465070138-1124378',
                    '20170820135119-524904679451057-1203518',
                    '20170820184451-524922291861042-1413670',
                    '20170820184518-524922318995711-1992748',
                    '20170818145038-524735438417086-1701527',
                    '20170820184613-52492237337065-1695157',
                    '20170818145038-524735438474293-1700243',
                    '20170818145038-524735438538729-1277164'
                ]
            ],
            [
                'name' => 'คัดเป็นลูกสุกรเตรียมส่งเสริม',
                'id' => [
                    '20170822144624-525080784545514-1111252',
                    '20170818154507-524738707203409-1839299',
                    '20170818155426-52473926630909-1995103',
                    '20170818154507-524738707496598-1454684',
                    '20170818154507-524738707565104-1694967'
                ]
            ],
            [
                'name' => 'รับคืนสุกร',
                'id' => [
                    '20170822144624-525080784545514-1111252',
                    '20170818155748-524739468776068-1360340',
                    '20170818155748-524739468829752-1745248',
                    '20170818155748-524739468873813-1537460',
                    '20170821131314-524988794051347-1814096',
                    '20170820140223-52490534383185-1162151',
                    '20170820135835-524905115198052-1634299',
                    '20170818155748-52473946891892-1048212',
                    '20170820193702-524925422153482-1954177',
                    '20170820193630-52492539050071-1724245'
                ]
            ],
            [
                'name' => 'คัดเป็นสุกรขุน',
                'id' => [
                    '20170822144624-525080784545514-1111252',
                    '20170818155239-524739159869612-1328673',
                    '20170818155456-524739296089494-1394454',
                    '20170818155239-524739159917863-1132433',
                    '20170818155239-524739159966794-1704246'
                ]
            ],
            [
                'name' => 'คัดเป็นพ่อแม่พันธ์',
                'id' => [
                    '20170822144624-525080784545514-1111252',
                    '20170818160516-524739916840059-1801984',
                    '20170818160516-524739916892917-1058106',
                    '20170818160516-524739916977384-1046619',
                    '20170818160517-524739917009233-1508339'
                ]
            ],
        ];

            $choiceid = '20170818142925-524734165752423-1865170';

            $answerformid = checkanswerform($idforms,$startdate,$enddate,$zone,$questionconfig,$choiceid);
            if($answerformid == false){
                Session::flash('message', "ไม่มีคำตอบ");
                return Redirect::back();
            }
            else{
                $this->generate_excel($answerformid,$questionconfig,$zone,$choiceid,$idforms);
            }
        }
        elseif($idforms == '20170818163225-524741545723944-1924289'){
        $questionconfig = [
            [
                'name' => 'การรับเข้า',
                'choiceId' => '20170818170046-52474324656027-1430227',
                'id' => [
                    '20170822141812-525079092838158-1213762',
                    '20170818202359-524755439534428-1581089',
                    '20170818194801-524753281758086-1501143',
                    '20170821145102-524994662921121-1936402',
                    '20170821142827-524993307323536-1404553',
                    '20170821145155-524994715556486-1848036',
                    '20170821143429-524993669905524-1800174',
                    '20170821145311-524994791045876-1725793',
                    '20170821143528-524993728288942-1992885',
                    '20170821145507-524994907589023-1018451',
                    '20170821144943-524994583915666-1087077',
                    '20170821145552-524994952113818-1333109',
                    '20170821144909-524994549847987-1396112',
                    '20170821145620-524994980003936-1573623',
                    '20170818194934-524753374379101-1905976',
                    '20170818195348-524753628112678-1684307',
                    '20170818195523-524753723454798-1773705'
                ]
            ],
            [
                'name' => 'การตาย',
                'id' => [
                    '20170822141812-525079092838158-1213762',
                    '20170818203157-524755917952133-1814701',
                    '20170818203158-524755918612122-1962506',
                    '20170821172604-525003964472047-1077903',
                    '20170821172719-525004039030378-1207714',
                    '20170821172804-525004084117687-1340143',
                    '20170821172912-525004152047353-1459179',
                    '20170821173032-52500423257241-1155109',
                    '20170821173146-525004306365514-1663092',
                    '20170821173355-52500443562838-1871630',
                    '20170818203158-524755918956462-1677581',
                    '20170818203159-524755919073855-1148143'
                ]
            ],
            [
                'name' => 'การฉีดวัคซีน',
                'id' => [
                    '20170822141812-525079092838158-1213762',
                    '20170821175457-5250056978428-1764173',
                    '20170818205104-524757064264068-1727127',
                    '20170818205043-52475704310681-1416303',
                    '20170821180124-52500608495757-1375640',
                    '20170821180235-525006155979354-1424096',
                    '20170821180428-5250062683157-1060249',
                    '20170821180519-525006319675965-1316100',
                    '20170821180601-525006361713561-1909257',
                    '20170818205425-524757265767073-1894234',
                    '20170818205043-524757043387454-1523712',
                ]
            ],
            [
                'name' => 'การปลดระวาง',
                'id' => [
                    '20170822141812-525079092838158-1213762',
                    '20170821181012-52500661298939-1765932',
                    '20170821181013-525006613652451-1990760',
                    '20170821181013-525006613747409-1075924',
                    '20170821181013-525006613822056-1105796',
                    '20170821181013-525006613896591-1204302',
                    '20170821181013-52500661396566-1010485',
                    '20170821181014-525006614051407-1944581',
                    '20170821181014-525006614123927-1944821',
                    '20170821181014-52500661419853-1854500'
                ]
            ],
            [
                'name' => 'รับคืน',
                'id' => [
                    '20170822141812-525079092838158-1213762',
                    '20170821185958-52500959803928-1549674',
                    '20170821185958-525009598383307-1049285',
                    '20170821185958-525009598465668-1132998',
                    '20170821185958-525009598545578-1759780',
                    '20170821185958-525009598624205-1060931',
                    '20170821185958-525009598699707-1654365',
                    '20170821185958-525009598773213-1601164',
                    '20170821185958-525009598848805-1505183',
                    '20170821185958-525009598921838-1524422'
                ]
            ],
            [
                'name' => 'การฟักออก',
                'id' => [
                    '20170822141812-525079092838158-1213762',
                    '20170818211956-524758796445515-1167415'
                ]
            ],
            [
                'name' => 'การคัดเป็นพ่อแม่พันธุ์',
                'id' => [
                    '20170822141812-525079092838158-1213762',
                    '20170818214957-52476059750505-1146637',
                    '20170818214957-524760597553577-1209986',
                    '20170818214957-524760597605774-1808804',
                    ''
                ]
            ],
            [
                'name' => 'การคัดลูกไก่เพื่อส่งเสริม',
                'id' => [
                    '20170822141812-525079092838158-1213762',
                    '20170821225252-525023572237491-1787491',
                    '20170818215517-524760917612037-1062296',
                    '20170819090825-524801305142998-1347900',
                    '20170819090846-524801326792012-1027001',
                    '20170818215517-524760917671629-1823805',
                    '20170818215517-524760917726099-1332672'
                ]
            ],
        ];
            $choiceid = '20170818165930-524743170912649-1078662';

            $answerformid = checkanswerform($idforms,$startdate,$enddate,$zone,$questionconfig,$choiceid);
            if($answerformid == false){
                Session::flash('message', "ไม่มีคำตอบ");
                return Redirect::back();
            }
            else{
                $this->generate_excel($answerformid,$questionconfig,$zone,$choiceid,$idforms);
            }
        }
        elseif($idforms == '20170819091608-524801768162695-1980373'){
        $questionconfig = [
            [
                'name' => 'รับเข้า',
                'id' => [
                    '20170823123441-525159281696193-1163680',
                    '20170823123726-525159446480833-1865534',
                    '20170819095742-524804262472903-1840711',
                    '20170823123726-525159446528153-1115675',
                    '20170823123726-525159446574891-1918895',
                    '20170823123726-525159446619691-1892484',
                    '20170823123726-525159446659822-1756737',
                    '20170823123726-525159446696918-1282118',
                    '20170823123726-525159446738239-1827809',
                    '20170823123726-525159446782818-1797908',
                    '20170823123726-525159446842595-1280140',
                    '20170823123726-525159446886592-1426655',
                    '20170823123726-525159446928306-1249058',
                    '20170823123726-525159446965114-1199071',
                    '20170823123727-525159447004783-1989180',
                    '20170823123727-525159447052089-1936961',
                    '20170823123727-525159447099125-1346412',
                    '20170823123727-525159447144279-1392008',
                    '20170823134624-525163584502889-1421316',
                    '20170823134659-525163619510812-1733815',
                    '20170819100010-524804410323024-1827367',
                ]
            ],
            [
                'name' => 'นำไปปลูก',
                'id' => [
                    '20170823123441-525159281696193-1163680',
                    '20170823124108-525159668939859-1939768',
                    '20170823124108-525159668991663-1047883',
                    '20170823124109-52515966906077-1302343',
                    '20170823124109-525159669115246-1304282',
                    '20170823124109-525159669166314-1758703',
                    '20170823124109-525159669207785-1735708',
                    '20170823124109-525159669251389-1341436',
                    '20170823124109-52515966930161-1948996',
                    '20170823124109-525159669349426-1848256',
                    '20170823124109-525159669390112-1000450',
                    '20170823124109-525159669439442-1411631',
                    '20170823124109-525159669489552-1726542',
                    '20170823124109-525159669531874-1438756',
                    '20170823124109-525159669597844-1889979',
                    '20170823124109-525159669648013-1850543',
                    '20170823124109-525159669688432-1369164',
                    '20170823135018-525163818103556-1873830',
                    '20170823135036-525163836434499-1029757',
                    ''
                ]
            ],
            [
                'name' => 'งานส่งเสริม',
                'id' => [
                    '20170823123441-525159281696193-1163680',
                    '20170820122658-524899618355357-1616179',
                    '20170820123753-52490027399913-1863072',
                    '20170820124518-524900718341499-1429979',
                    '20170824142746-525252466526953-1298977',
                    '20170820125727-524901447716171-1720668',
                    '20170820124911-524900951115111-1247965',
                    '20170828152520-525601520790608-1767984',
                    '20170828152328-525601408833187-1726092',
                    '20170819101022-524805022939097-1314113',
                    '20170823124127-525159687304779-1642884',
                    '20170819101135-524805095952451-1537131',
                    '20170823124127-525159687352868-1183684',
                    '20170819101540-524805340196528-1623946',
                    '20170823124127-525159687405053-1193361',
                    '20170819102508-524805908886878-1157960',
                    '20170823124127-525159687449279-1249372',
                    '20170819103712-524806632513273-1946964',
                    '20170823124127-525159687499265-1470231',
                    '20170819103859-524806739552382-1683387',
                    '20170823124127-5251596875492-1831854',
                    '20170819104151-524806911897073-1041705',
                    '20170823124127-525159687590615-1372150',
                    '20170819104421-524807061004767-1643307',
                    '20170823124127-525159687642247-1579949',
                    '20170819104457-52480709773897-1829377',
                    '20170823124127-525159687690191-1990087',
                    '20170819104558-524807158431748-1546630',
                    '20170823124127-525159687737096-1477939',
                    '20170819104938-524807378563768-1053541',
                    '20170823124127-525159687791922-1599579',
                    '20170819105055-524807455794947-1169962',
                    '20170823124127-525159687835163-1068053',
                    '20170819105333-524807613958629-1298777',
                    '20170823124127-525159687880604-1933848',
                    '20170819105411-52480765130345-1617773',
                    '20170823124127-525159687932558-1819782',
                    '20170819105458-524807698768798-1870099',
                    '20170823124127-525159687974858-1931214',
                    '20170819110103-524808063912802-1008824',
                    '20170823124128-525159688046449-1213412',
                    '20170824143804-52525308403409-1145141',
                    '20170824143827-525253107102189-1924182',
                    '20170824143843-525253123341251-1878043'
                ]
            ],
            /*[
                'name' => 'งานแปลง',
                'choiceId' => '20170819092328-524802208735076-1944560',
                'id' => [

                ]
            ],*/
        ];
            $choiceid = [
                '20170819092812-524802492150475-1191998',
                '20170819092115-524802075624973-1776821'
            ];

            $answerformid = checkanswerform($idforms,$startdate,$enddate,$zone,$questionconfig,$choiceid);
            if($answerformid == false){
                Session::flash('message', "ไม่มีคำตอบ");
                return Redirect::back();
            }
            else{
                $this->generate_excel($answerformid,$questionconfig,$zone,$choiceid,$idforms);
            }
        }
    }

    /* customize Excel */ 
    public function generate_excel($answerformid,$questionconfig,$zone,$choiceid,$idforms){

            $form = DB::collection('form')->where('data.objectId',$idforms)->pluck('data');

            return Excel::create($form[0]['title'] . " " . $form[0]['updatedAt'], function($excel) use ($answerformid,$questionconfig,$zone,$choiceid,$idforms){   
                    foreach($questionconfig as $questionconfigs){
                        $excel->sheet($questionconfigs['name'], function($sheet) use ($answerformid,$questionconfigs,$zone,$choiceid,$idforms){
                            $data = [];
                            $checkflatdata = [];
                            if(!empty($zone) && $idforms != '20170819091608-524801768162695-1980373'){
                                $flatdata = DB::collection('flatData')
                                    ->where($choiceid,$questionconfigs['name'])
                                    ->where($questionconfigs['id'][0],$zone)
                                    ->whereIn('objectId',$answerformid)
                                    ->project(
                                        [
                                            "parentAnswerFormId" => 0,
                                            "objectId" => 0,
                                            "answerFormId" => 0,
                                            "_id" => 0,
                                            "answerPreview" => 0,
                                            "createdAt" => 0,
                                            "createdBy" => 0,
                                            "isoUpdatedAt" => 0,
                                            "deletedAt" => 0,
                                            "isoCreatedAt" => 0,
                                        ])->get();
                            }
                            else{
                                $flatdata = DB::collection('flatData')
                                    ->where($choiceid[0],$questionconfigs['name'])
                                    ->orwhere($choiceid[1],$questionconfigs['name'])
                                    ->where($questionconfigs['id'][0],$zone)
                                    ->whereIn('objectId',$answerformid)
                                    ->project(
                                        [
                                            "parentAnswerFormId" => 0,
                                            "objectId" => 0,
                                            "answerFormId" => 0,
                                            "_id" => 0,
                                            "answerPreview" => 0,
                                            "createdAt" => 0,
                                            "createdBy" => 0,
                                            "isoUpdatedAt" => 0,
                                            "deletedAt" => 0,
                                            "isoCreatedAt" => 0,
                                        ])->get();                    
                            }

                       
                            foreach($questionconfigs['id'] as $questionid){
                                $question[] = DB::collection('question')
                                        ->where('data.objectId',$questionid)
                                        ->pluck('data');                                
                            }
                            if(!empty($flatdata)){
                                foreach($flatdata as $flatdatas){
                                $data['วันที่ตรวจแปลง'] = DateThai((date('Y-m-j H:m:s', strtotime($flatdatas['updatedAt'] . " +7 hour"))));
                                    foreach($question as $questions){
                                        foreach($questions as $questionvalue){
                                            foreach($flatdatas as $key => $value){
                                                if($questionvalue['objectId'] == $key){
                                                    if(is_array($flatdatas[$key])){
                                                        $data[$questionvalue['title']] = implode(',',$flatdatas[$key]);
                                                    }
                                                    else{
                                                        $data[$questionvalue['title']] = $flatdatas[$key];
                                                    } 
                                                }
                                                else if(empty($data[$questionvalue['title']])){
                                                    $data[$questionvalue['title']] = '';
                                                }
                                            }
                                        }
                                    }
                                    $users = User::where('_id',$flatdatas['updatedBy'])->first();
                                    $data['ผู้บันทึก'] = $users['firstname']." ".$users['lastname'];
                                    $result[] = $data;
                                }
                            }
                            else{
                                foreach($question as $questions){
                                    foreach($questions as $questionvalue){
                                        $data['วันที่ตรวจแปลง'] = '';
                                        $data[$questionvalue['title']] = '';
                                    }
                                }
                                $data['ผู้บันทึก'] = '';
                                $result[] = $data;
                            }
                            $countcol  = count($question)+2;
                            $findcol = findcolexcel($countcol);

                            $sheet->cell('A1:'.$findcol.'1', function($cell) {

                                $cell->setFontSize(12);

                                $cell->setFontWeight('bold');
                            })->fromArray($result, null, 'A1', true);
                            //$sheet

                        });
                    }
            })->export('xlsx');     
    }

    public function Oilteadata(Request $request) {

        
        $adminForm = \Auth::user()->form_ids;
        $admin = \Auth::user()->firstname == 'admin';
        $adminFormDetail = checkRoles($admin,$adminForm,$request['idforms']);

        if ($admin || $adminFormDetail == '0' || $adminFormDetail == '2') {
            $answerformid = DB::collection('answerForm')
                            ->timeout(-1)
                            ->where('data.deletedAt','')
                            ->where('data.formId', $request['idforms'])
                            ->pluck('data.objectId');
        } else {
            Session::flash('message', "เฉพาะ admin เท่านั้น !");
            return Redirect::back();
        }

        //// query หาแปลงชาน้ำมันจาก flatdata
        $oilTeaPlants = DB::collection('flatData')
                    ->timeout(-1)
                    ->whereIn('objectId', $answerformid)
                    ->orderBy('20170923133359-527866439397654-1906985', 'ASC')
                    ->project([
                            "answerFormId" => 0,
                            "_id" => 0,
                            "answerPreview" => 0,
                            "createdAt" => 0,
                            "createdBy" => 0,
                            "updatedAt" => 0,
                            "deletedAt" => 0
                    ])->get();

        if (empty($oilTeaPlants)) {
            Session::flash('message', "ไม่มีข้อมูลในฐานข้อมูล !");
            return Redirect::back();
        }

        $rawdataresult = [];
        $missresult = [];
        $dupresult = [];
        $wrongresult = [];
        $PLANT_NUMBER = '20170923133359-527866439397654-1906985';
        $TREE_NUMBER = '20170924051946-527923186856328-1818442';
        $OWNER_PREFIX = '20170927035437-528177277140892-1456683';
        $OWNER_FIRSTNAME = '20170927035050-528177050079481-1208383';
        $OWNER_LASTNAME = '20170927035405-528177245844387-1945347';
        $VILLAGE_NAME = '20170923133938-527866778466936-1673062';
        $GRADE_OF_TREE = '20170924052009-527923209216053-1393981'; 
        $BRANCH_TREE = '20170928064746-528274066156638-1855247';
        $HEIGHT_TREE = '20170924052356-527923436402867-1527983'; 
        $DIAMETER = '20170924052420-527923460685421-1506424'; 
        $NATURE_SHAPE = '20170924052527-527923527114575-1199551'; 
        $OTHER_SHAPE = '20170924052624-527923584636773-1020211';
        $REPAIR_YEAR = '20170930132742-528470862371504-1932568';
        //$image_tree = '20170923135819-527867899258356-1278866';
        $IMAGE_TREE = '20170924052756-527923676209237-1301131';
        $parent_tree = '20170924055643-527925403438996-1541374';
        $dateTime = date('Y-m-d');
        if ($request['type'] == 'rawdata') {
            Log::info('Export Oiltea Rawdata', ['user access' => \Auth::user()->_id]);
            $i=0;
            Log::info('Start loop rawdata');
            /// start loop ของแปลงชาเพื่อหาต้นชาน้ำมัน
            foreach ($oilTeaPlants as $oilTeaPlant) {
                if (isset($oilTeaPlant[$parent_tree])) {            
                    // query หาต้นชาน้ำมันจาก flatdata
                    $data[$i] = DB::collection('flatData')
                                    ->timeout(-1)
                                    ->where('parentAnswerFormId', $oilTeaPlant['objectId'])
                                    ->orderBy($TREE_NUMBER, 'ASC')
                                    ->project([
                                            "_id" => 0,
                                            "createdAt" => 0,
                                            "updatedAt" => 0,
                                            "createdBy" => 0,
                                            "deletedAt" => 0,
                                            "answerPreview" => 0,
                                            "objectId" => 0,
                                            "parentAnswerFormId" => 0,
                                            "isoCreatedAt" => 0,
                                            "isoUpdatedAt" => 0
                                    ])->get();
                } else {
                    $data[$i] = [];
                }

                $users = User::where('_id', $oilTeaPlant['updatedBy'])->first();
                $username = $users->firstname." ".$users->lastname;

                ///////////// set default index $oilTeaPlants
                ///set default index เลขแปลง
                if (empty($oilTeaPlant[$PLANT_NUMBER])) { 
                    $plantNumber = '';
                }
                else if (!empty($oilTeaPlant[$PLANT_NUMBER])) {
                    $plantNumber = dataToValue($oilTeaPlant[$PLANT_NUMBER]);
                }
                ///set default index ชื่อหมู่บ้าน
                if (empty($oilTeaPlant[$VILLAGE_NAME])) { 
                    $oilTeaPlant[$VILLAGE_NAME] = '';
                }
                //// set default index ชื่อ-สกุล เจ้าของแปลง                
                if (empty($oilTeaPlant[$OWNER_PREFIX]) || empty($oilTeaPlant[$OWNER_FIRSTNAME]) || empty($oilTeaPlant[$OWNER_LASTNAME])) {
                    $fullName = '';
                } else if (gettype($oilTeaPlant[$OWNER_PREFIX]) != 'array' || gettype($oilTeaPlant[$OWNER_FIRSTNAME]) != 'array' || gettype($oilTeaPlant[$OWNER_LASTNAME]) != 'array') {
                    $fullName = $oilTeaPlant[$OWNER_PREFIX].$oilTeaPlant[$OWNER_FIRSTNAME]." ".$oilTeaPlant[$OWNER_LASTNAME];
                } else {
                    $fullName = implode(',', $oilTeaPlant[$OWNER_PREFIX]).implode(',', $oilTeaPlant[$OWNER_FIRSTNAME])." ".implode(',', $oilTeaPlant[$OWNER_LASTNAME]);
                }

                if (!empty($data[$i])) {
                    $check = array();
                    $dups = array();
                    $numTree = array();

                    // Loop field ต้นชาน้ำมันที่ได้จากการ query
                    for ($n=0; $n < count($data[$i]); $n++) {
                        //set default index $data
                        if (empty($data[$i][$n][$TREE_NUMBER])) { 
                            $data[$i][$n][$TREE_NUMBER] = '';
                        } if (empty($data[$i][$n][$GRADE_OF_TREE])) { 
                            $data[$i][$n][$GRADE_OF_TREE] = '';
                        } if (empty($data[$i][$n][$BRANCH_TREE])) { 
                            $data[$i][$n][$BRANCH_TREE] = '';
                        } if (empty($data[$i][$n][$HEIGHT_TREE])) { 
                            $data[$i][$n][$HEIGHT_TREE] = '';
                        } if (empty($data[$i][$n][$DIAMETER])) { 
                            $data[$i][$n][$DIAMETER] = '';
                        }  if (empty($data[$i][$n][$NATURE_SHAPE])) { 
                            $data[$i][$n][$NATURE_SHAPE] = '';
                        } if (empty($data[$i][$n][$OTHER_SHAPE])) { 
                            $data[$i][$n][$OTHER_SHAPE] = '';
                        } if (empty($data[$i][$n][$REPAIR_YEAR])) { 
                            $data[$i][$n][$REPAIR_YEAR] = '';
                        } if (empty($data[$i][$n][$IMAGE_TREE])) { 
                            $data[$i][$n][$IMAGE_TREE] = '';
                        }

                        $idata[$i][$n]['เลขที่แปลง'] = $plantNumber;
                        $idata[$i][$n]['เลขที่ต้นชาน้ำมัน'] = dataToValue($data[$i][$n][$TREE_NUMBER]);
                        $idata[$i][$n]['ชื่อเจ้าของแปลง'] = $fullName;
                        $idata[$i][$n]['ชื่อหมู่บ้าน'] = dataToValue($oilTeaPlant[$VILLAGE_NAME]);
                        $idata[$i][$n]['เกรดของต้นชาน้ำมัน'] = dataToValue($data[$i][$n][$GRADE_OF_TREE]);
                        $idata[$i][$n]['ต้นชาน้ำมันผ่านการเสียบกิ่งมาหรือไม่'] = dataToValue($data[$i][$n][$BRANCH_TREE]);
                        $idata[$i][$n]['ความสูงของต้น (เมตร)'] = dataToValue($data[$i][$n][$HEIGHT_TREE]);
                        $idata[$i][$n]['เส้นผ่านศูนย์กลางลำต้น (เซนติเมตร)'] = dataToValue($data[$i][$n][$DIAMETER]);
                        $idata[$i][$n]['ลักษณะทรงพุ่มของต้นชาน้ำมัน'] = dataToValue($data[$i][$n][$NATURE_SHAPE]);
                        $idata[$i][$n]['โปรดระบุ ลักษณะทรงพุ่มอื่นๆ'] = dataToValue($data[$i][$n][$OTHER_SHAPE]);
                        $idata[$i][$n]['ปี พ.ศ. ที่ปลูกซ่อม'] = dataToValue($data[$i][$n][$REPAIR_YEAR]);
                        $idata[$i][$n]['รูปภาพประกอบการเก็บข้อมูล'] = dataToValue($data[$i][$n][$IMAGE_TREE]);
                        $idata[$i][$n]['ผู้บันทึก'] = $username;     
                        $rawdataresult[] = $idata[$i][$n];
                        $numTree[] = $idata[$i][$n]['เลขที่ต้นชาน้ำมัน'];
                        $check[intval(dataToValue($data[$i][$n][$TREE_NUMBER]))] = intval(dataToValue($data[$i][$n][$TREE_NUMBER]));
                    } 
                    // Loop หาต้นชาน้ำมันที่ไม่มี
                    for ($m=1;$m<count($check);$m++) {
                        if (!isset($check[$m])) {
                            $missData[$i][$m]['plantNumber'] = $plantNumber;
                            $missData[$i][$m]['treeNumber'] = sprintf("%04d", $m);
                            $missData[$i][$m]['userName'] = $username;
                            $missresult[] = $missData[$i][$m];
                        }
                    }
                    // Loop หาต้นชาที่มีซ้ำกันใส่ในตัวแปล $dupresult
                    $j=0;
                    foreach (array_count_values($numTree) as $val => $c) {
                        if ($c > 1) { 
                            $dupidata[$i][$j]['เลขที่แปลง'] = $plantNumber;
                            $dupidata[$i][$j]['เลขที่ต้นชาน้ำมัน'] = $val;
                            $dupidata[$i][$j]['ผู้บันทึก'] = $username; 
                            $dupresult[] = $dupidata[$i][$j]; 
                        }
                        $j++;
                    }

                    // Loop หาต้นชาน้ำมันที่ผิดปกติใส่ในตัวแปร $wrongresult
                    if (!empty($numTree)) {
                        for ($y = 0; $y < count($numTree); $y++) {
                            if (substr($numTree[$y],0,1) > 2) {
                                $wrongidata[$i][$y]['เลขที่แปลง'] = $plantNumber;
                                $wrongidata[$i][$y]['เลขที่ต้นชาน้ำมัน'] = $numTree[$y];
                                $wrongidata[$i][$y]['ผู้บันทึก'] = $username; 
                                $wrongresult[] = $wrongidata[$i][$y]; 
                            }
                        }       
                    }
                } /*else {
                    // ชื่อ-สกุล เจ้าของแปลง
                    $idata[$i][0]['เลขที่แปลง'] = $plantNumber;
                    $idata[$i][0]['เลขที่ต้นชาน้ำมัน'] = '';
                    $idata[$i][0]['ชื่อเจ้าของแปลง'] = $fullName;
                    $idata[$i][0]['ชื่อหมู่บ้าน'] = dataToValue($oilTeaPlant[$VILLAGE_NAME]);
                    $idata[$i][0]['เกรดของต้นชาน้ำมัน'] = '';
                    $idata[$i][0]['ต้นชาน้ำมันผ่านการเสียบกิ่งมาหรือไม่'] = '';
                    $idata[$i][0]['ความสูงของต้น (เมตร)'] = '';
                    $idata[$i][0]['เส้นผ่านศูนย์กลางลำต้น (เซนติเมตร)'] = '';
                    $idata[$i][0]['ลักษณะทรงพุ่มของต้นชาน้ำมัน'] = '';
                    $idata[$i][0]['โปรดระบุ ลักษณะทรงพุ่มอื่นๆ'] = '';
                    $idata[$i][0]['ปี พ.ศ. ที่ปลูกซ่อม'] = '';
                    $idata[$i][0]['รูปภาพประกอบการเก็บข้อมูล'] = '';
                    $idata[$i][0]['ผู้บันทึก'] = $username;     
                    $rawdataresult[] = $idata[$i][0]; 
                }*/
                $i++;
            } // จบ loop ของแปลงชาน้ำมัน
            Log::info('End loop rawdata');
            $style = (new StyleBuilder())
               ->setFontBold()
               ->setFontSize(12)
               ->build();
            $writer = WriterFactory::create(Type::XLSX); // for XLSX files
            $writer->openToBrowser($dateTime."_ข้อมูลรวมงานเก็บข้อมูลต้นชาน้ำมัน.xlsx");
            
            $rawData = $writer->getCurrentSheet();
            $writer->addRowWithStyle(
                array(
                    'เลขที่แปลง',
                    'เลขที่ต้นชาน้ำมัน',
                    'ชื่อเจ้าของแปลง',
                    'ชื่อหมู่บ้าน',
                    'เกรดของต้นชาน้ำมัน',
                    'ต้นชาน้ำมันผ่านการเสียบกิ่งมาหรือไม่',
                    'ความสูงของต้น (เมตร)',
                    'เส้นผ่านศูนย์กลางลำต้น (เซนติเมตร)',
                    'ลักษณะทรงพุ่มของต้นชาน้ำมัน',
                    'ลักษณะทรงพุ่มอื่นๆ',
                    'ปี พ.ศ. ที่ปลูกซ่อม',
                    'รูปภาพประกอบการเก็บข้อมูล',
                    'ผู้บันทึก'
                ),
            $style);
            $sheet = $writer->getCurrentSheet();
            $sheet->setName('ข้อมูลดิบ');            
            $writer->addRows($rawdataresult);
            Log::info('Create Sheet Rawdata');
            
            $missData = $writer->addNewSheetAndMakeItCurrent();
            $writer->addRowWithStyle(
                array(
                    'เลขที่แปลง',
                    'เลขที่ต้นชาน้ำมัน',
                    'ผู้บันทึก'
                ),
            $style);
            $sheet = $writer->getCurrentSheet();
            $sheet->setName('เลขต้นชาน้ำมันที่ไม่มี');                        
            $writer->addRows($missresult);
            Log::info('Create Sheet Missdata');
            
            $dupData = $writer->addNewSheetAndMakeItCurrent();
            $writer->addRowWithStyle(
                array(
                    'เลขที่แปลง',
                    'เลขที่ต้นชาน้ำมัน',
                    'ผู้บันทึก'
                ),
            $style);
            $sheet = $writer->getCurrentSheet();
            $sheet->setName('เลขต้นชาน้ำมันที่ซ้ำกัน');       
            $writer->addRows($dupresult);
            Log::info('Create Sheet Duplicatedata');
            
            $dupData = $writer->addNewSheetAndMakeItCurrent();
            $writer->addRowWithStyle(
                array(
                    'เลขที่แปลง',
                    'เลขที่ต้นชาน้ำมัน',
                    'ผู้บันทึก'
                ),
            $style);
            $sheet = $writer->getCurrentSheet();
            $sheet->setName('เลขต้นชาน้ำมันที่ผิดปกติ');        
            $writer->addRows($wrongresult);
            Log::info('Create Sheet Wrongdata');
            Log::info('Start Wrtie Excel');
            $writer->close();
            Log::info('Export Oiltea Rawdata Success');
        } else {
            Log::info('Export Oiltea Summarydata', ['user access' => \Auth::user()->_id]);
            Excel::create($dateTime.'_ข้อมูลสรุปงานเก็บข้อมูลต้นชาน้ำมัน', function($excel) use ($PLANT_NUMBER,$TREE_NUMBER,$OWNER_PREFIX,$OWNER_FIRSTNAME,$OWNER_LASTNAME,$VILLAGE_NAME,$GRADE_OF_TREE,$BRANCH_TREE,$HEIGHT_TREE,$DIAMETER,$NATURE_SHAPE,$OTHER_SHAPE,$REPAIR_YEAR,$IMAGE_TREE,$parent_tree,$oilTeaPlants) {
            $excel->sheet('ข้อมูลสรุปภาพรวม', function($sheet) use ($PLANT_NUMBER,$TREE_NUMBER,$OWNER_PREFIX,$OWNER_FIRSTNAME,$OWNER_LASTNAME,$VILLAGE_NAME,$GRADE_OF_TREE,$BRANCH_TREE,$HEIGHT_TREE,$DIAMETER,$NATURE_SHAPE,$OTHER_SHAPE,$REPAIR_YEAR,$IMAGE_TREE,$parent_tree,$oilTeaPlants) {
                /*$flat = DB::collection('flatData')->raw()->aggregate([
                    [
                        '$group' =>  [
                            '_id' => [ '20170923133359-527866439397654-1906985' => '$20170923133359-527866439397654-1906985'
                            ],
                            "objectId" => [ 
                                '$addToSet' => '$objectId'
                            ],
                            $OWNER_PREFIX => [ 
                                '$addToSet' => "$".$OWNER_PREFIX
                            ],
                            $OWNER_FIRSTNAME => [ 
                                '$addToSet' => "$".$OWNER_FIRSTNAME
                            ],
                            $OWNER_LASTNAME => [ 
                                '$addToSet' => "$".$OWNER_LASTNAME
                            ],
                            $VILLAGE_NAME => [ 
                                '$addToSet' => "$".$VILLAGE_NAME
                            ]
                        ]
                    ]
                ],['allowDiskUse' => true]);*/

                foreach ($oilTeaPlants as $flats) {
                    $countton = 0;
                    $sumheight = 0;
                    $sumpie = 0;
                    $grade = [];
                    $shape = [];
                    $branch = [];
                    $countTree = 0;
                    //if (!empty($flats[$parent_tree])) {
                        //for ($i=0; $i < count($flats['objectId']); $i++) {
                            $check = DB::collection('flatData')
                                        ->where('parentAnswerFormId', $flats['objectId'])
                                        ->get();                                       
                    if(!empty($check)) {
                                $countTree += count($check);
                                foreach ($check as $checks) {
                                    if (empty($checks[$GRADE_OF_TREE])) {
                                        $checks[$GRADE_OF_TREE] = '';
                                    } else if(gettype($checks[$GRADE_OF_TREE]) != 'array') {
                                        $grade[] = $checks[$GRADE_OF_TREE];
                                    } else {
                                        $grade[] = implode(',', $checks[$GRADE_OF_TREE]);
                                    }

                                    if(empty($checks[$HEIGHT_TREE])){
                                        $checks[$HEIGHT_TREE] = 0;
                                    } else if(gettype($checks[$HEIGHT_TREE]) != 'array') {
                                        $sumheight += $checks[$HEIGHT_TREE];
                                    } else{
                                        $sumheight += implode(',',$checks[$HEIGHT_TREE]);
                                    }

                                    if (empty($checks[$DIAMETER])) {
                                        $checks[$DIAMETER] = 0;
                                    } else if(gettype($checks[$DIAMETER]) != 'array') {
                                        $sumpie += $checks[$DIAMETER];
                                    } else{
                                        $sumpie += implode(',', $checks[$DIAMETER]);
                                    }

                                    if (empty($checks[$NATURE_SHAPE])) {
                                        $checks[$NATURE_SHAPE] = '';
                                    } else if (gettype($checks[$NATURE_SHAPE]) != 'array') {
                                        $shape[] = $checks[$NATURE_SHAPE];
                                    } else {
                                        $shape[] = implode(',', $checks[$NATURE_SHAPE]);
                                    }

                                    if (empty($checks[$BRANCH_TREE])) {
                                        $checks[$BRANCH_TREE] = '';
                                    } else if(gettype($checks[$BRANCH_TREE]) != 'array') {
                                        $branch[] = $checks[$BRANCH_TREE];
                                    } else {
                                        $branch[] = implode(',', $checks[$BRANCH_TREE]);
                                    }
                                }
                            //}
                        //}

                        $sumgrade = array_count_values($grade);
                        $sumbranch = array_count_values($branch);
                        if (!empty($shape)) {
                            $sumshape = array_count_values($shape);
                            krsort($sumshape);
                            $max = max($sumshape);

                            $topshape = array_keys($sumshape, $max);
                            $maxshape = implode(",",array_slice($topshape, 0, 2));
                        } else {
                            $maxshape = '';
                        }

                        if (empty($sumgrade['A1 : ลำต้นใหญ่  ให้ผลผลิตดี (>100)'])) {
                            $sumgrade['A1 : ลำต้นใหญ่  ให้ผลผลิตดี (>100)'] = 0;
                        }
                        if (empty($sumgrade['A2 : ลำต้นไม่ใหญ่  ให้ผลผลิตดี (>100)'])) {
                            $sumgrade['A2 : ลำต้นไม่ใหญ่  ให้ผลผลิตดี (>100)'] = 0;
                        }
                        if (empty($sumgrade['B1 : ลำต้นใหญ่  ให้ผลผลิตไม่ค่อยดี (50-99)'])) {
                            $sumgrade['B1 : ลำต้นใหญ่  ให้ผลผลิตไม่ค่อยดี (50-99)'] = 0;
                        }
                        if (empty($sumgrade['B2 : ลำต้นไม่ใหญ่  ให้ผลผลิตไม่ค่อยดี (50-99)'])) {
                            $sumgrade['B2 : ลำต้นไม่ใหญ่  ให้ผลผลิตไม่ค่อยดี (50-99)'] = 0;
                        }
                        if (empty($sumgrade['C1 : ลำต้นใหญ่  ให้ผลผลิต 1-49'])) {
                            $sumgrade['C1 : ลำต้นใหญ่  ให้ผลผลิต 1-49'] = 0;
                        }
                        if (empty($sumgrade['C2 : ลำต้นไม่ใหญ่  ให้ผลผลิต 1-49'])) {
                            $sumgrade['C2 : ลำต้นไม่ใหญ่  ให้ผลผลิต 1-49'] = 0;
                        }
                        if (empty($sumgrade['D1 : ลำต้นใหญ่ ไม่ให้ผลผลิต'])) {
                            $sumgrade['D1 : ลำต้นใหญ่ ไม่ให้ผลผลิต'] = 0;
                        }
                        if (empty($sumgrade['D2 : ลำต้นไม่ใหญ่ ไม่ให้ผลผลิต'])) {
                            $sumgrade['D2 : ลำต้นไม่ใหญ่ ไม่ให้ผลผลิต'] = 0;
                        }
                        if (empty($sumgrade['ปลูกซ่อม'])) {
                            $sumgrade['ปลูกซ่อม'] = 0;
                        }
                        if (empty($sumgrade['รวมต้นชาทั้งหมด'])) {
                            $sumgrade['รวมต้นชาทั้งหมด'] = 0;
                        }
                        if (empty($sumgrade['หลุมว่าง'])) {
                            $sumgrade['หลุมว่าง'] = 0;
                        }
                        if (empty($sumbranch['ผ่านการเสียบกิ่ง'])) {
                            $sumbranch['ผ่านการเสียบกิ่ง'] = 0;
                        }
                        if (empty($sumbranch['ไม่ได้เสียบกิ่ง'])) {
                            $sumbranch['ไม่ได้เสียบกิ่ง'] = 0;
                        }
                                                
                        $countton = $countTree - $sumgrade['หลุมว่าง'];
                        if ($countton > 0) {
                            $avgheight = $sumheight / $countton;
                            $avgpie = $sumpie / $countton;

                            $avgheight = number_format($avgheight, 2, '.', '');
                            $avgpie = number_format($avgpie, 2, '.', '');
                        } else {
                            $avgheight = $sumheight / 1;
                            $avgpie = $sumpie / 1;                        
                        }
                            
                        if(!empty($flats[$PLANT_NUMBER])) {
                            
                            $plantNumber = $flats[$PLANT_NUMBER];
                            if(gettype($flats[$PLANT_NUMBER]) != 'array'){
                                $plantNumber = $flats[$PLANT_NUMBER];
                            } else {
                                $plantNumber = implode(',',$flats[$PLANT_NUMBER]);
                            }
                            $value['เลขที่แปลง'] = trim(strtolower($plantNumber));
                            if (!empty($flats[$OWNER_PREFIX]) || !empty($flats[$OWNER_FIRSTNAME]) || !empty($flats[$OWNER_LASTNAME])) {
                                if (gettype($flats[$OWNER_PREFIX][0]) != 'array' || gettype($flats[$OWNER_FIRSTNAME][0]) != 'array' || gettype($flats[$OWNER_LASTNAME][0]) != 'array') {
                                    $namepang = $flats[$OWNER_PREFIX][0].$flats[$OWNER_FIRSTNAME][0]." ".$flats[$OWNER_LASTNAME][0];
                                    $value['ชื่อเจ้าของแปลง'] = $namepang;
                                } else {
                                    $namepang = implode(',',$flats[$OWNER_PREFIX][0]).implode(',',$flats[$OWNER_FIRSTNAME][0])." ".implode(',',$flats[$OWNER_LASTNAME][0]);
                                    $value['ชื่อเจ้าของแปลง'] = $namepang;               
                                }
                            }

                            if (!empty($flats[$VILLAGE_NAME])) {
                                if(gettype($flats[$VILLAGE_NAME][0]) != 'array') {
                                    $value['ชื่อหมู่บ้าน'] = $flats[$VILLAGE_NAME][0];
                                } else {
                                    $value['ชื่อหมู่บ้าน'] = implode(',', $flats[$VILLAGE_NAME][0]);
                                }
                            }
                            
                            $value['A1'] = $sumgrade['A1 : ลำต้นใหญ่  ให้ผลผลิตดี (>100)'];
                            $value['A2'] = $sumgrade['A2 : ลำต้นไม่ใหญ่  ให้ผลผลิตดี (>100)'];
                            $value['B1'] = $sumgrade['B1 : ลำต้นใหญ่  ให้ผลผลิตไม่ค่อยดี (50-99)'];
                            $value['B2'] = $sumgrade['B2 : ลำต้นไม่ใหญ่  ให้ผลผลิตไม่ค่อยดี (50-99)'];
                            $value['C1'] = $sumgrade['C1 : ลำต้นใหญ่  ให้ผลผลิต 1-49'];
                            $value['C2'] = $sumgrade['C2 : ลำต้นไม่ใหญ่  ให้ผลผลิต 1-49'];
                            $value['D1'] = $sumgrade['D1 : ลำต้นใหญ่ ไม่ให้ผลผลิต'];
                            $value['D2'] = $sumgrade['D2 : ลำต้นไม่ใหญ่ ไม่ให้ผลผลิต'];
                            $value['รวมต้นชาน้ำมันทั้งหมด'] = $countton;

                            $value['ผ่านการเสียบกิ่ง'] = $sumbranch['ผ่านการเสียบกิ่ง'];
                            $value['ไม่ผ่านการเสียบกิ่ง'] = $sumbranch['ไม่ได้เสียบกิ่ง'];
                            
                            $value['รวมจำนวนหลุมว่าง'] = $sumgrade['หลุมว่าง'];
                            $value['รวมจำนวนต้นปลูกซ่อม'] = $sumgrade['ปลูกซ่อม'];
                            
                            $value['ความสูงของต้นโดยเฉลี่ย(เมตร)'] = $avgheight;
                            $value['เส้นผ่าศูนย์กลางลำต้นโดยเฉลี่ยทั้งแปลง(เซนติเมตร)'] = $avgpie;
                            $value['ลักษณะทรงพุ่มโดยเฉลี่ยทั้งแปลง'] = $maxshape;

                            $data[] = $value;
                        }
                    }
                }
                $sortedData = array_values(array_sort($data, function ($value) {
                    return $value['เลขที่แปลง'];
                }));
                $sheet->row(1, ['A', 'B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S']); // etc etc
                $sheet->row(1, function($row) { 
                    $row->setFontSize(12);
                    $row->setFontWeight('bold');
                });
                $sheet->fromArray($sortedData, null, 'A1', true);
                });
            })->export('xlsx');
        }      
    }
    
}

